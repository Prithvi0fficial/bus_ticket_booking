
def booking_confirmation(request, bus_id):
    bus = get_object_or_404(Bus, id=bus_id)

    if request.method == "GET":
        seats = request.GET.get("seats", "")
        price = request.GET.get("price", "")

        return render(request, 'booking/confirmation.html', {
            'bus': bus,
            'bus_id': bus_id,
            'seats': seats,
            'price': price
        })

    if request.method == "POST":
        seats = request.POST.get("seats")
        price = request.POST.get("price")
        passenger_name = request.POST.get("passenger_name")
        passenger_age = request.POST.get("passenger_age")
        passenger_email = request.POST.get("passenger_email")

        if not price or not seats or not passenger_name or not passenger_age or not passenger_email:
            return HttpResponse("❌ All fields are required!", status=400)

        try:
            price = float(price)
        except ValueError:
            return HttpResponse("❌ Invalid price format!", status=400)

        # Convert seat IDs to Seat objects
        seat_ids = seats.split(",")
        seat_objects = [get_object_or_404(Seat, id=int(seat_id)) for seat_id in seat_ids]

        # ✅ Check if any seat is already booked
        already_booked = Booking.objects.filter(bus=bus, seats__in=seat_objects).exists()
        if already_booked:
            return HttpResponse("❌ One or more selected seats are already booked!", status=400)

        # ✅ Create the booking
        booking = Booking.objects.create(
            bus=bus,
            route=bus.route,
            type=bus.type,
            price=price,
            total_price=price,
            date=now(),
            user=request.user,
            passenger_name=passenger_name,
            passenger_age=passenger_age,
            passenger_email=passenger_email
        )
        booking.seats.set(seat_objects)

        print(f"✅ Booking Created: Booking for {passenger_name} on {booking.date}, ID: {booking.id}")

        # ✅ Send email confirmation with ticket details
        subject = "Your Bus Ticket Confirmation"
        message = f"""
        Hello {passenger_name},

        Your ticket has been successfully booked. Here are the details:

        🚌 Bus: {bus.name} ({bus.route})
        🎟️ Seat(s): {seats}
        💰 Price: ₹{price}
        📅 Date: {booking.date.strftime('%Y-%m-%d %H:%M')}

        Please keep this email as proof of booking.

        Thank you for choosing our service!

        Regards,
        Bus Ticket Booking Team
        """
        from_email = settings.DEFAULT_FROM_EMAIL
        recipient_list = [passenger_email]

        try:
          send_mail(subject, message, from_email, recipient_list)
          print(f"✅ Email sent to {passenger_email}")
        except Exception as e:
            print(f"❌ Failed to send email: {e}")

        return render(request, 'booking/confirmation.html', {
            'booking': booking,
            'bus': bus,
            'bus_id': bus_id,
            'seats': seats,
            'price': price,
            'date': booking.date
        })

    return HttpResponse("❌ Invalid request method!", status=405)
